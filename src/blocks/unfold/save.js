import classnames from "classnames";
const { RichText } = wp.blockEditor;

import hexToRgba from "hex-to-rgba";

export default function save(props) {

    const { attributes, className } = props


    const {
        block_id,
        showTitle,
        titleTxt,
        titleTag,
        content,
        align,
        unfoldTxt,
        foldTxt,
        showIcon,
        foldIcon,
        unfoldIcon,
        iconPosition,
        buttonSize,
        buttonPosition,
        buttonAlign,
        fadeContent,
        fadeHeight,
        fadeHeightTablet,
        fadeHeightMobile,
        foldUnit,
        foldHeight,
        foldHeightTablet,
        foldHeightMobile,
        foldHeightPxTablet,
        foldHeightPxMobile,
        foldHeightPx,
        foldDuration,
        foldSecond,
        foldEasing,
        unfoldDuration,
        unfoldSecond,
        unfoldEasing,
        boxBackgroundColor,
        boxOpacity,
        boxBackgroundId,
        boxBackgroundImg,
        boxBackgroundPosition,
        boxBackgroundRepeat,
        boxBackgroundSize,
        boxFixed,
        boxBorderType,
        boxBorderTop,
        boxBorderRight,
        boxBorderBottom,
        boxBorderLeft,
        boxBorderColor,
        boxBorderRadius,
        boxShadowColor,
        boxShadowBlur,
        boxShadowHorizontal,
        boxShadowVertical,
        boxShadowPosition,
        boxMarginType,
        boxMarginTop,
        boxMarginRight,
        boxMarginBottom,
        boxMarginLeft,
        boxMarginTopTablet,
        boxMarginRightTablet,
        boxMarginBottomTablet,
        boxMarginLeftTablet,
        boxMarginTopMobile,
        boxMarginRightMobile,
        boxMarginBottomMobile,
        boxMarginLeftMobile,
        boxPaddingTop,
        boxPaddingRight,
        boxPaddingBottom,
        boxPaddingLeft,
        boxPaddingTopTablet,
        boxPaddingRightTablet,
        boxPaddingBottomTablet,
        boxPaddingLeftTablet,
        boxPaddingTopMobile,
        boxPaddingRightMobile,
        boxPaddingBottomMobile,
        boxPaddingLeftMobile,
        boxPaddingType,
        boxBackgroundColorH,
        boxOpacityH,
        boxBackgroundIdH,
        boxBackgroundImgH,
        boxBackgroundPositionH,
        boxBackgroundRepeatH,
        boxBackgroundSizeH,
        boxFixedH,
        boxBorderTypeH,
        boxBorderTopH,
        boxBorderRightH,
        boxBorderBottomH,
        boxBorderLeftH,
        boxBorderColorH,
        boxBorderRadiusH,
        boxShadowColorH,
        boxShadowBlurH,
        boxShadowHorizontalH,
        boxShadowVerticalH,
        boxShadowPositionH,
        boxMarginTypeH,
        boxMarginTopH,
        boxMarginRightH,
        boxMarginBottomH,
        boxMarginLeftH,
        boxMarginTopTabletH,
        boxMarginRightTabletH,
        boxMarginBottomTabletH,
        boxMarginLeftTabletH,
        boxMarginTopMobileH,
        boxMarginRightMobileH,
        boxMarginBottomMobileH,
        boxMarginLeftMobileH,
        boxPaddingTopH,
        boxPaddingRightH,
        boxPaddingBottomH,
        boxPaddingLeftH,
        boxPaddingTopTabletH,
        boxPaddingRightTabletH,
        boxPaddingBottomTabletH,
        boxPaddingLeftTabletH,
        boxPaddingTopMobileH,
        boxPaddingRightMobileH,
        boxPaddingBottomMobileH,
        boxPaddingLeftMobileH,
        boxPaddingTypeH,
        titleColor,
        titleSizeUnit,
        titleSize,
        titleSizeMobile,
        titleSizeTablet,
        titleWeight,
        titleStyle,
        titleLetter,
        titleUpper,
        titleLine,
        titleBackgroundColor,
        titleOpacity,
        titleBackgroundId,
        titleBackgroundImg,
        titleBackgroundPosition,
        titleBackgroundRepeat,
        titleBackgroundSize,
        titleFixed,
        titleBorderType,
        titleBorderTop,
        titleBorderRight,
        titleBorderBottom,
        titleBorderLeft,
        titleBorderColor,
        titleBorderRadius,
        titleShadowColor,
        titleShadowBlur,
        titleShadowHorizontal,
        titleShadowVertical,
        titleShadowPosition,
        titleMarginType,
        titleMarginTop,
        titleMarginRight,
        titleMarginBottom,
        titleMarginLeft,
        titleMarginTopTablet,
        titleMarginRightTablet,
        titleMarginBottomTablet,
        titleMarginLeftTablet,
        titleMarginTopMobile,
        titleMarginRightMobile,
        titleMarginBottomMobile,
        titleMarginLeftMobile,
        titlePaddingTop,
        titlePaddingRight,
        titlePaddingBottom,
        titlePaddingLeft,
        titlePaddingTopTablet,
        titlePaddingRightTablet,
        titlePaddingBottomTablet,
        titlePaddingLeftTablet,
        titlePaddingTopMobile,
        titlePaddingRightMobile,
        titlePaddingBottomMobile,
        titlePaddingLeftMobile,
        titlePaddingType,
        contentColor,
        contentSizeType,
        contentSize,
        contentSizeMobile,
        contentSizeTablet,
        contentWeight,
        contentStyle,
        contentLetter,
        contentUpper,
        contentLine,
        contentBackgroundColor,
        contentOpacity,
        contentBackgroundId,
        contentBackgroundImg,
        contentBackgroundPosition,
        contentBackgroundRepeat,
        contentBackgroundSize,
        contentFixed,
        contentBorderType,
        contentBorderTop,
        contentBorderRight,
        contentBorderBottom,
        contentBorderLeft,
        contentBorderColor,
        contentBorderRadius,
        contentShadowColor,
        contentShadowBlur,
        contentShadowHorizontal,
        contentShadowVertical,
        contentShadowPosition,
        contentMarginType,
        contentMarginTop,
        contentMarginRight,
        contentMarginBottom,
        contentMarginLeft,
        contentMarginTopTablet,
        contentMarginRightTablet,
        contentMarginBottomTablet,
        contentMarginLeftTablet,
        contentMarginTopMobile,
        contentMarginRightMobile,
        contentMarginBottomMobile,
        contentMarginLeftMobile,
        contentPaddingTop,
        contentPaddingRight,
        contentPaddingBottom,
        contentPaddingLeft,
        contentPaddingTopTablet,
        contentPaddingRightTablet,
        contentPaddingBottomTablet,
        contentPaddingLeftTablet,
        contentPaddingTopMobile,
        contentPaddingRightMobile,
        contentPaddingBottomMobile,
        contentPaddingLeftMobile,
        contentPaddingType,
        btnSizeUnit,
        btnSize,
        btnSizeTablet,
        btnSizeMobile,
        btnStyle,
        btnWeight,
        btnUpper,
        btnLine,
        btnLetter,
        btnColor,
        btnBackgroundColor,
        btnOpacity,
        btnBorderType,
        btnBorderTop,
        btnBorderRight,
        btnBorderBottom,
        btnBorderLeft,
        btnBorderColor,
        btnBorderRadius,
        btnTxtShadowColor,
        btnTxtShadowBlur,
        btnTxtShadowHorizontal,
        btnTxtShadowVertical,
        btnShadowColor,
        btnShadowBlur,
        btnShadowHorizontal,
        btnShadowVertical,
        btnShadowPosition,
        btnMarginType,
        btnMarginTop,
        btnMarginRight,
        btnMarginBottom,
        btnMarginLeft,
        btnMarginTopTablet,
        btnMarginRightTablet,
        btnMarginBottomTablet,
        btnMarginLeftTablet,
        btnMarginTopMobile,
        btnMarginRightMobile,
        btnMarginBottomMobile,
        btnMarginLeftMobile,
        btnPaddingTop,
        btnPaddingRight,
        btnPaddingBottom,
        btnPaddingLeft,
        btnPaddingTopTablet,
        btnPaddingRightTablet,
        btnPaddingBottomTablet,
        btnPaddingLeftTablet,
        btnPaddingTopMobile,
        btnPaddingRightMobile,
        btnPaddingBottomMobile,
        btnPaddingLeftMobile,
        btnPaddingType,
        btnColorH,
        btnBackgroundColorH,
        btnOpacityH,
        btnBorderTypeH,
        btnBorderTopH,
        btnBorderRightH,
        btnBorderBottomH,
        btnBorderLeftH,
        btnBorderColorH,
        btnBorderRadiusH,
        btnTxtShadowColorH,
        btnTxtShadowBlurH,
        btnTxtShadowHorizontalH,
        btnTxtShadowVerticalH,
        btnShadowColorH,
        btnShadowBlurH,
        btnShadowHorizontalH,
        btnShadowVerticalH,
        btnShadowPositionH,
        btnMarginTypeH,
        btnMarginTopH,
        btnMarginRightH,
        btnMarginBottomH,
        btnMarginLeftH,
        btnMarginTopTabletH,
        btnMarginRightTabletH,
        btnMarginBottomTabletH,
        btnMarginLeftTabletH,
        btnMarginTopMobileH,
        btnMarginRightMobileH,
        btnMarginBottomMobileH,
        btnMarginLeftMobileH,
        btnPaddingTopH,
        btnPaddingRightH,
        btnPaddingBottomH,
        btnPaddingLeftH,
        btnPaddingTopTabletH,
        btnPaddingRightTabletH,
        btnPaddingBottomTabletH,
        btnPaddingLeftTabletH,
        btnPaddingTopMobileH,
        btnPaddingRightMobileH,
        btnPaddingBottomMobileH,
        btnPaddingLeftMobileH,
        btnPaddingTypeH,
        fadeBackgroundColor,
        fadeOpacity,
        fadeBackgroundId,
        fadeBackgroundImg,
        fadeBackgroundPosition,
        fadeBackgroundRepeat,
        fadeBackgroundSize,
        fadeFixed,
        iconColor,
        iconShadowHorizontal,
        iconShadowVertical,
        iconShadowBlur,
        iconShadowColor,
        fadeBorderType,
        fadeBorderTop,
        fadeBorderRight,
        fadeBorderBottom,
        fadeBorderLeft,
        fadeBorderColor,
        fadeBorderRadius,
        fadePaddingTop,
        fadePaddingRight,
        fadePaddingBottom,
        fadePaddingLeft,
        fadePaddingTopTablet,
        fadePaddingRightTablet,
        fadePaddingBottomTablet,
        fadePaddingLeftTablet,
        fadePaddingTopMobile,
        fadePaddingRightMobile,
        fadePaddingBottomMobile,
        fadePaddingLeftMobile,
        fadePaddingType,
        toggle
    } = attributes;

    const button = (
        <div className={`premium-unfold-button-container`}
            style={{ textAlign: buttonAlign }}
        >
            <a id={`premium-unfold-button-${block_id}`} className={`premium-button premium-button-${buttonSize}`} style={{
                backgroundColor: btnBackgroundColor ? hexToRgba(btnBackgroundColor, btnOpacity) : "transparent",
                borderStyle: btnBorderType,
                borderWidth: `${btnBorderTop}px ${btnBorderRight}px ${btnBorderBottom}px ${btnBorderLeft}px`,
                borderRadius: btnBorderRadius,
                boxShadow: `${btnShadowHorizontal}px ${btnShadowVertical}px ${btnTxtShadowBlur}px ${btnShadowColor} ${btnShadowPosition}`

            }}>
                {("before" === iconPosition && showIcon) && <i className={`premium-unfold-before `} style={{ color: iconColor, textShadow: `${iconShadowHorizontal}px ${iconShadowVertical}px ${iconShadowBlur}px ${iconShadowColor}` }}></i>}

                <span id={`premium-unfold-button-text-${block_id}`} className={"premium-unfold-button-text"} style={{ color: btnColor, textShadow: `${btnTxtShadowHorizontal}px ${btnTxtShadowVertical}px ${btnTxtShadowBlur}px ${btnTxtShadowColor}`, fontWeight: btnWeight, letterSpacing: btnLetter, lineHeight: btnLine, fontStyle: btnStyle, textTransform: btnUpper ? "uppercase" : "none" }}>{toggle ? unfoldTxt : foldTxt}</span>
                {("after" === iconPosition && showIcon) && <i className={`premium-unfold-after `} style={{ color: iconColor, textShadow: `${iconShadowHorizontal}px ${iconShadowVertical}px ${iconShadowBlur}px ${iconShadowColor}` }}></i>}
            </a>
        </div>
    )
    const mainClass = classnames(className, 'premium-unfold-wrap')


    return (
        <div
            id={`premium-unfold-${block_id}`}
            className={`${mainClass} premium-unfold-${block_id}`}
            data-foldText={foldTxt}
            data-unfoldText={unfoldTxt}
            data-buttonIcon={foldIcon}
            data-buttonUnfoldIcon={unfoldIcon}
            data-foldSelect={foldUnit}
            data-foldHeight={foldHeight}
            data-foldDur={foldDuration === "custom" ? foldSecond * 1000 : foldDuration}
            data-unfoldDur={unfoldDuration === "custom" ? unfoldSecond * 1000 : foldDuration}
            data-foldEasing={foldEasing}
            data-unfoldEasing={unfoldEasing}
        >
            <div className={`premium-unfold-container`}
                style={{
                    backgroundColor: boxBackgroundColor ? hexToRgba(boxBackgroundColor, boxOpacity) : "transparent",
                    backgroundImage: boxBackgroundImg ? `url(${boxBackgroundImg})` : "none",
                    backgroundSize: boxBackgroundSize,
                    backgroundPosition: boxBackgroundPosition,
                    backgroundRepeat: boxBackgroundRepeat,
                    backgroundAttachment: boxFixed ? "fixed" : "unset",
                    borderStyle: boxBorderType,
                    borderWidth: `${boxBorderTop}px ${boxBorderRight}px ${boxBorderBottom}px ${boxBorderLeft}px`,
                    borderColor: boxBorderColor,
                    borderRadius: boxBorderRadius,
                    boxShadow: `${boxShadowHorizontal}px ${boxShadowVertical}px ${boxShadowBlur}px ${boxShadowColor} ${boxShadowPosition}`
                }}
            >
                <div className={`premium-unfold-folder`}>
                    {showTitle && <RichText.Content
                        tagName={titleTag.toLowerCase()}
                        className={`premium-unfold-heading `}
                        value={titleTxt}
                        style={{
                            textAlign: align,
                            color: titleColor,
                            fontWeight: titleWeight,
                            fontStyle: titleStyle,
                            textTransform: titleUpper ? "upperCase" : "none",
                            letterSpacing: ` ${titleLetter}px`,
                            lineHeight: `${titleLine}px`,
                            backgroundColor: titleBackgroundColor ? hexToRgba(titleBackgroundColor, titleOpacity) : "transparent",
                            backgroundImage: titleBackgroundImg ? `url(${titleBackgroundImg})` : "none",
                            backgroundSize: titleBackgroundSize,
                            backgroundPosition: titleBackgroundPosition,
                            backgroundRepeat: titleBackgroundRepeat,
                            backgroundSize: titleBackgroundSize,
                            backgroundAttachment: titleFixed ? "fixed" : "unset",
                            borderStyle: titleBorderType,
                            borderWidth: `${titleBorderTop}px ${titleBorderRight}px ${titleBorderBottom}px ${titleBorderLeft}px`,
                            borderColor: titleBorderColor,
                            borderRadius: titleBorderRadius,
                            boxShadow: `${titleShadowHorizontal}px ${titleShadowVertical}px ${titleShadowBlur}px ${titleShadowColor} ${titleShadowPosition}`
                        }}
                    />}
                    <div id={`premium-unfold-content-${block_id}`} className={`premium-unfold-content toggled`} style={{
                        textAlign: align, height: foldUnit === "percent" ? `${foldHeightPx}px` : `${foldHeight}px`,
                    }}>
                        <div className={`premium-unfold-content-wrap`} style={{
                            color: contentColor,
                            fontWeight: contentWeight,
                            fontStyle: contentStyle,
                            textTransform: contentUpper ? "upperCase" : "none",
                            letterSpacing: ` ${contentLetter}px`,
                            lineHeight: `${contentLine}px`,
                            backgroundColor: contentBackgroundColor ? hexToRgba(contentBackgroundColor, contentOpacity) : "transparent",
                            backgroundImage: contentBackgroundImg ? `url(${contentBackgroundImg})` : "none",
                            backgroundSize: contentBackgroundSize,
                            backgroundPosition: contentBackgroundPosition,
                            backgroundRepeat: contentBackgroundRepeat,
                            backgroundSize: contentBackgroundSize,
                            backgroundAttachment: contentFixed ? "fixed" : "unset",
                            borderStyle: contentBorderType,
                            borderWidth: `${contentBorderTop}px ${contentBorderRight}px ${contentBorderBottom}px ${contentBorderLeft}px`,
                            borderColor: contentBorderColor,
                            borderRadius: contentBorderRadius,
                            boxShadow: `${contentShadowHorizontal}px ${contentShadowVertical}px ${contentShadowBlur}px ${contentShadowColor} ${contentShadowPosition}`
                        }}>
                            {content}
                        </div>
                    </div>

                    {fadeContent && <div id={`premium-unfold-gradient-${block_id}`} class={`premium-unfold-gradient toggled`} style={{
                        backgroundColor: fadeBackgroundColor ? hexToRgba(fadeBackgroundColor, fadeOpacity) : "",
                        backgroundImage: fadeBackgroundImg ? `url(${fadeBackgroundImg})` : "",
                        backgroundSize: fadeBackgroundSize,
                        backgroundPosition: fadeBackgroundPosition,
                        backgroundRepeat: fadeBackgroundRepeat,
                        backgroundSize: fadeBackgroundSize,
                        backgroundAttachment: fadeFixed ? "fixed" : "unset",
                        borderStyle: fadeBorderType,
                        borderWidth: `${fadeBorderTop}px ${fadeBorderRight}px ${fadeBorderBottom}px ${fadeBorderLeft}px`,
                        borderColor: fadeBorderColor,
                    }}></div>}
                </div>
                {"inside" === buttonPosition && button}
            </div>
            {"outside" === buttonPosition && button}


        </div>
    )
}