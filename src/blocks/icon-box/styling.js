import hexToRgba from 'hex-to-rgba';
import generateCSS from '../../../assets/js/blocks/generateCss';
import generateCSSUnit from '../../../assets/js/blocks/generateCssUnit'

function styling(props) {
    const {
        block_id,
        classMigrate,
        titleSizeUnit,
        descSizeUnit,
        descSize,
        descSizeTablet,
        descSizeMobile,
        titleSize,
        titleSizeTablet,
        titleSizeMobile,
        btnSizeUnit,
        btnSize,
        btnSizeTablet,
        btnSizeMobile,
        iconMarginType,
        iconMarginTypeH,
        iconMarginTop,
        iconMarginTopH,
        iconMarginTopTablet,
        iconMarginTopTabletH,
        iconMarginTopMobile,
        iconMarginTopMobileH,
        iconMarginRight,
        iconMarginRightH,
        iconMarginRightTablet,
        iconMarginRightTabletH,
        iconMarginRightMobile,
        iconMarginRightMobileH,
        iconMarginBottom,
        iconMarginBottomH,
        iconMarginBottomTablet,
        iconMarginBottomTabletH,
        iconMarginBottomMobile,
        iconMarginBottomMobileH,
        iconMarginLeft,
        iconMarginLeftH,
        iconMarginLeftTablet,
        iconMarginLeftTabletH,
        iconMarginLeftMobile,
        iconMarginLeftMobileH,
        iconPaddingType,
        iconPaddingTypeH,
        iconPaddingTop,
        iconPaddingTopH,
        iconPaddingTopTablet,
        iconPaddingTopTabletH,
        iconPaddingTopMobile,
        iconPaddingTopMobileH,
        iconPaddingRight,
        iconPaddingRightH,
        iconPaddingRightTablet,
        iconPaddingRightTabletH,
        iconPaddingRightMobile,
        iconPaddingRightMobileH,
        iconPaddingBottom,
        iconPaddingBottomH,
        iconPaddingBottomTablet,
        iconPaddingBottomTabletH,
        iconPaddingBottomMobile,
        iconPaddingBottomMobileH,
        iconPaddingLeft,
        iconPaddingLeftH,
        iconPaddingLeftTablet,
        iconPaddingLeftTabletH,
        iconPaddingLeftMobile,
        iconPaddingLeftMobileH,
        titleMarginType,
        titleMarginTop,
        titleMarginRight,
        titleMarginBottom,
        titleMarginLeft,
        titleMarginTopTablet,
        titleMarginRightTablet,
        titleMarginBottomTablet,
        titleMarginLeftTablet,
        titleMarginTopMobile,
        titleMarginRightMobile,
        titleMarginBottomMobile,
        titleMarginLeftMobile,
        titlePaddingTop,
        titlePaddingRight,
        titlePaddingBottom,
        titlePaddingLeft,
        titlePaddingTopTablet,
        titlePaddingRightTablet,
        titlePaddingBottomTablet,
        titlePaddingLeftTablet,
        titlePaddingTopMobile,
        titlePaddingRightMobile,
        titlePaddingBottomMobile,
        titlePaddingLeftMobile,
        titlePaddingType,
        labelSizeUnit,
        labelSize,
        labelSizeMobile,
        labelSizeTablet,
        labelMarginType,
        labelMarginTop,
        labelMarginRight,
        labelMarginBottom,
        labelMarginLeft,
        labelMarginTopTablet,
        labelMarginRightTablet,
        labelMarginBottomTablet,
        labelMarginLeftTablet,
        labelMarginTopMobile,
        labelMarginRightMobile,
        labelMarginBottomMobile,
        labelMarginLeftMobile,
        descMarginType,
        descMarginTop,
        descMarginRight,
        descMarginBottom,
        descMarginLeft,
        descMarginTopTablet,
        descMarginRightTablet,
        descMarginBottomTablet,
        descMarginLeftTablet,
        descMarginTopMobile,
        descMarginRightMobile,
        descMarginBottomMobile,
        descMarginLeftMobile,
        descPaddingTop,
        descPaddingRight,
        descPaddingBottom,
        descPaddingLeft,
        descPaddingTopTablet,
        descPaddingRightTablet,
        descPaddingBottomTablet,
        descPaddingLeftTablet,
        descPaddingTopMobile,
        descPaddingRightMobile,
        descPaddingBottomMobile,
        descPaddingLeftMobile,
        descPaddingType,
        btnMarginType,
        btnMarginTop,
        btnMarginRight,
        btnMarginBottom,
        btnMarginLeft,
        btnMarginTopTablet,
        btnMarginRightTablet,
        btnMarginBottomTablet,
        btnMarginLeftTablet,
        btnMarginTopMobile,
        btnMarginRightMobile,
        btnMarginBottomMobile,
        btnMarginLeftMobile,
        btnMarginTypeH,
        btnMarginTopH,
        btnMarginRightH,
        btnMarginBottomH,
        btnMarginLeftH,
        btnMarginTopTabletH,
        btnMarginRightTabletH,
        btnMarginBottomTabletH,
        btnMarginLeftTabletH,
        btnMarginTopMobileH,
        btnMarginRightMobileH,
        btnMarginBottomMobileH,
        btnMarginLeftMobileH,
        btnPaddingTop,
        btnPaddingRight,
        btnPaddingBottom,
        btnPaddingLeft,
        btnPaddingTopTablet,
        btnPaddingRightTablet,
        btnPaddingBottomTablet,
        btnPaddingLeftTablet,
        btnPaddingTopMobile,
        btnPaddingRightMobile,
        btnPaddingBottomMobile,
        btnPaddingLeftMobile,
        btnPaddingType,
        btnPaddingTopH,
        btnPaddingRightH,
        btnPaddingBottomH,
        btnPaddingLeftH,
        btnPaddingTopTabletH,
        btnPaddingRightTabletH,
        btnPaddingBottomTabletH,
        btnPaddingLeftTabletH,
        btnPaddingTopMobileH,
        btnPaddingRightMobileH,
        btnPaddingBottomMobileH,
        btnPaddingLeftMobileH,
        btnPaddingTypeH,
        marginT,
        marginR,
        marginB,
        marginL,
        paddingT,
        paddingR,
        paddingB,
        paddingL,
        paddingU,
        marginTTablet,
        marginRTablet,
        marginBTablet,
        marginLTablet,
        marginTMobile,
        marginRMobile,
        marginBMobile,
        marginLMobile,
        paddingTTablet,
        paddingRTablet,
        paddingBTablet,
        paddingLTablet,
        paddingTMobile,
        paddingRMobile,
        paddingBMobile,
        paddingLMobile,
        outerMarginT,
        outerMarginR,
        outerMarginB,
        outerMarginL,
        outerMarginTTablet,
        outerMarginRTablet,
        outerMarginBTablet,
        outerMarginLTablet,
        outerMarginTMobile,
        outerMarginRMobile,
        outerMarginBMobile,
        outerMarginLMobile,
        outerPaddingT,
        outerPaddingR,
        outerPaddingB,
        outerPaddingL,
        outerPaddingTTablet,
        outerPaddingRTablet,
        outerPaddingBTablet,
        outerPaddingLTablet,
        outerPaddingTMobile,
        outerPaddingRMobile,
        outerPaddingBMobile,
        outerPaddingLMobile,
        hOffsetUnit,
        hOffset,
        hOffsetTablet,
        hOffsetMobile,
        vOffsetUnit,
        vOffset,
        vOffsetTablet,
        vOffsetMobile,
        iconBackOpacity,
        iconBackOpacityTablet,
        iconBackOpacityMobile,
        iconRotate,
        iconRotateMobile,
        iconRotateTablet,
        iconColorH,
        iconBackColorH,
        iconOpacityH,
        iconborderTypeH,
        iconborderTopH,
        iconborderRightH,
        iconborderBottomH,
        iconborderLeftH,
        iconborderColorH,
        iconborderRadiusH,
        iconShadowColorH,
        iconShadowBlurH,
        iconShadowHorizontalH,
        iconShadowVerticalH,
        iconShadowPositionH,
    } = props.attributes;

    let selectors = {}
    let tablet_selectors = {}
    let mobile_selectors = {}

    selectors = {
        " ": {
            "margin-top": generateCSSUnit(outerMarginT, 'px'),
            "margin-right": generateCSSUnit(outerMarginR, 'px'),
            "margin-bottom": generateCSSUnit(outerMarginB, 'px'),
            "margin-left": generateCSSUnit(outerMarginL, 'px'),
            "padding-top": generateCSSUnit(outerPaddingT, paddingU),
            "padding-right": generateCSSUnit(outerPaddingR, paddingU),
            "padding-bottom": generateCSSUnit(outerPaddingB, paddingU),
            "padding-left": generateCSSUnit(outerPaddingL, paddingU)
        },
        " .premium-icon-box": {
            "margin-top": generateCSSUnit(marginT, 'px'),
            "margin-right": generateCSSUnit(marginR, 'px'),
            "margin-bottom": generateCSSUnit(marginB, 'px'),
            "margin-left": generateCSSUnit(marginL, 'px'),
            "padding-top": generateCSSUnit(paddingT, paddingU),
            "padding-right": generateCSSUnit(paddingR, paddingU),
            "padding-bottom": generateCSSUnit(paddingB, paddingU),
            "padding-left": generateCSSUnit(paddingL, paddingU)
        },
        " .premium-icon-box__icon": {
            "margin-top": generateCSSUnit(iconMarginTop, iconMarginType),
            "margin-right": generateCSSUnit(iconMarginRight, iconMarginType),
            "margin-bottom": generateCSSUnit(iconMarginBottom, iconMarginType),
            "margin-left": generateCSSUnit(iconMarginLeft, iconMarginType),
            "padding-top": generateCSSUnit(iconPaddingTop, iconPaddingType),
            "padding-right": generateCSSUnit(iconPaddingRight, iconPaddingType),
            "padding-bottom": generateCSSUnit(iconPaddingBottom, iconPaddingType),
            "padding-left": generateCSSUnit(iconPaddingLeft, iconPaddingType)
        },
        " .premium-icon-box__icon_wrap:hover .premium-icon-box__icon ": {
            "color": iconColorH + "!important",
            "background-color": iconBackColorH ? hexToRgba(iconBackColorH, iconBackOpacity) : iconBackColorH,
            "border-style": iconborderTypeH,
            "border-width": `${iconborderTopH}px ${iconborderRightH}px ${iconborderBottomH}px ${iconborderLeftH}px`,
            "border-color": `${iconborderColorH}`,
            "box-shadow": `${iconShadowHorizontalH}px ${iconShadowVerticalH}px ${iconShadowBlurH}px ${iconShadowColorH} ${iconShadowPositionH}`,
            "margin-top": generateCSSUnit(iconMarginTopH, iconMarginTypeH),
            "margin-right": generateCSSUnit(iconMarginRightH, iconMarginTypeH),
            "margin-bottom": generateCSSUnit(iconMarginBottomH, iconMarginTypeH),
            "margin-left": generateCSSUnit(iconMarginLeftH, iconMarginTypeH),
            "padding-top": generateCSSUnit(iconPaddingTopH, iconPaddingTypeH),
            "padding-right": generateCSSUnit(iconPaddingRightH, iconPaddingTypeH),
            "padding-bottom": generateCSSUnit(iconPaddingBottomH, iconPaddingTypeH),
            "padding-left": generateCSSUnit(iconPaddingLeftH, iconPaddingTypeH)
        },
        " .premium-icon-box__title_wrap  ": {
            "margin-top": generateCSSUnit(titleMarginTop, titleMarginType) + " !important",
            "margin-right": generateCSSUnit(titleMarginRight, titleMarginType) + " !important",
            "margin-bottom": generateCSSUnit(titleMarginBottom, titleMarginType) + " !important",
            "margin-left": generateCSSUnit(titleMarginLeft, titleMarginType) + " !important",
            "padding-top": generateCSSUnit(titlePaddingTop, titlePaddingType) + " !important",
            "padding-right": generateCSSUnit(titlePaddingRight, titlePaddingType) + " !important",
            "padding-bottom": generateCSSUnit(titlePaddingBottom, titlePaddingType) + " !important",
            "padding-left": generateCSSUnit(titlePaddingLeft, titlePaddingType) + " !important"
        },

        " .premium-icon-box__title_wrap .premium-icon-box__title ": {
            "font-size": generateCSSUnit(titleSize, titleSizeUnit)
        },

        " .premium-icon-box-label": {
            "font-size": generateCSSUnit(labelSize, labelSizeUnit),
            "margin-top": generateCSSUnit(labelMarginTop, labelMarginType),
            "margin-right": generateCSSUnit(labelMarginRight, labelMarginType),
            "margin-bottom": generateCSSUnit(labelMarginBottom, labelMarginType),
            "margin-left": generateCSSUnit(labelMarginLeft, labelMarginType)

        },
        " .premium-icon-box__desc": {
            "font-size": generateCSSUnit(descSize, descSizeUnit),
            "margin-top": generateCSSUnit(descMarginTop, descMarginType) + " !important",
            "margin-right": generateCSSUnit(descMarginRight, descMarginType) + " !important",
            "margin-bottom": generateCSSUnit(descMarginBottom, descMarginType) + " !important",
            "margin-left": generateCSSUnit(descMarginLeft, descMarginType) + " !important",
            "padding-top": generateCSSUnit(descPaddingTop, descPaddingType) + " !important",
            "padding-right": generateCSSUnit(descPaddingRight, descPaddingType) + " !important",
            "padding-bottom": generateCSSUnit(descPaddingBottom, descPaddingType) + " !important",
            "padding-left": generateCSSUnit(descPaddingLeft, descPaddingType) + " !important"

        },
        " .premium-icon-box__btn": {
            "font-size": generateCSSUnit(btnSize, btnSizeUnit),
            "margin-top": generateCSSUnit(btnMarginTop, btnMarginType) + " !important",
            "margin-right": generateCSSUnit(btnMarginRight, btnMarginType) + " !important",
            "margin-bottom": generateCSSUnit(btnMarginBottom, btnMarginType) + " !important",
            "margin-left": generateCSSUnit(btnMarginLeft, btnMarginType) + " !important",
            "padding-top": generateCSSUnit(btnPaddingTop, btnPaddingType) + " !important",
            "padding-right": generateCSSUnit(btnPaddingRight, btnPaddingType) + " !important",
            "padding-bottom": generateCSSUnit(btnPaddingBottom, btnPaddingType) + " !important",
            "padding-left": generateCSSUnit(btnPaddingLeft, btnPaddingType) + " !important"

        },
        " .premium-icon-box__btn_wrap:hover .premium-icon-box__btn": {
            "margin-top": generateCSSUnit(btnMarginTopH, btnMarginTypeH) + " !important",
            "margin-right": generateCSSUnit(btnMarginRightH, btnMarginTypeH) + " !important",
            "margin-bottom": generateCSSUnit(btnMarginBottomH, btnMarginTypeH) + " !important",
            "margin-left": generateCSSUnit(btnMarginLeftH, btnMarginTypeH) + " !important",
            "padding-top": generateCSSUnit(btnPaddingTopH, btnPaddingTypeH) + " !important",
            "padding-right": generateCSSUnit(btnPaddingRightH, btnPaddingTypeH) + " !important",
            "padding-bottom": generateCSSUnit(btnPaddingBottomH, btnPaddingTypeH) + " !important",
            "padding-left": generateCSSUnit(btnPaddingLeftH, btnPaddingTypeH) + " !important"

        },
        ' .premium-icon-box-big': {
            "right": generateCSSUnit(hOffset, hOffsetUnit) + " !important",
            "bottom": generateCSSUnit(vOffset, vOffsetUnit) + " !important",
            "opacity": `${iconBackOpacity}`,
            "transform ": `rotate(${iconRotate}deg)`,
        },

    }

    tablet_selectors = {
        " ": {
            "margin-top": generateCSSUnit(outerMarginTTablet, 'px'),
            "margin-right": generateCSSUnit(outerMarginRTablet, 'px'),
            "margin-bottom": generateCSSUnit(outerMarginBTablet, 'px'),
            "margin-left": generateCSSUnit(outerMarginLTablet, 'px'),
            "padding-top": generateCSSUnit(outerPaddingTTablet, paddingU),
            "padding-right": generateCSSUnit(outerPaddingRTablet, paddingU),
            "padding-bottom": generateCSSUnit(outerPaddingBTablet, paddingU),
            "padding-left": generateCSSUnit(outerPaddingLTablet, paddingU)
        },
        " .premium-icon-box": {
            "margin-top": generateCSSUnit(marginTTablet, 'px'),
            "margin-right": generateCSSUnit(marginRTablet, 'px'),
            "margin-bottom": generateCSSUnit(marginBTablet, 'px'),
            "margin-left": generateCSSUnit(marginLTablet, 'px'),
            "padding-top": generateCSSUnit(paddingTTablet, paddingU),
            "padding-right": generateCSSUnit(paddingRTablet, paddingU),
            "padding-bottom": generateCSSUnit(paddingBTablet, paddingU),
            "padding-left": generateCSSUnit(paddingLTablet, paddingU)
        },
        " .premium-icon-box__icon": {
            "margin-top": generateCSSUnit(iconMarginTopTablet, iconMarginType),
            "margin-right": generateCSSUnit(iconMarginRightTablet, iconMarginType),
            "margin-bottom": generateCSSUnit(iconMarginBottomTablet, iconMarginType),
            "margin-left": generateCSSUnit(iconMarginLeftTablet, iconMarginType),
            "padding-top": generateCSSUnit(iconPaddingTopTablet, iconPaddingType),
            "padding-right": generateCSSUnit(iconPaddingRightTablet, iconPaddingType),
            "padding-bottom": generateCSSUnit(iconPaddingBottomTablet, iconPaddingType),
            "padding-left": generateCSSUnit(iconPaddingLeftTablet, iconPaddingType)
        },
        " .premium-icon-box__title_wrap .premium-icon-box__title ": {
            "font-size": generateCSSUnit(titleSizeTablet, titleSizeUnit),
            "margin-top": generateCSSUnit(titleMarginTopTablet, titleMarginType) + " !important",
            "margin-right": generateCSSUnit(titleMarginRightTablet, titleMarginType) + " !important",
            "margin-bottom": generateCSSUnit(titleMarginBottomTablet, titleMarginType) + " !important",
            "margin-left": generateCSSUnit(titleMarginLeftTablet, titleMarginType) + " !important",
            "padding-top": generateCSSUnit(titlePaddingTopTablet, titlePaddingType) + " !important",
            "padding-right": generateCSSUnit(titlePaddingRightTablet, titlePaddingType) + " !important",
            "padding-bottom": generateCSSUnit(titlePaddingBottomTablet, titlePaddingType) + " !important",
            "padding-left": generateCSSUnit(titlePaddingLeftTablet, titlePaddingType) + " !important"
        },

        " .premium-icon-box__desc": {
            "font-size": generateCSSUnit(descSizeTablet, descSizeUnit),
            "margin-top": generateCSSUnit(descMarginTopTablet, descMarginType) + " !important",
            "margin-right": generateCSSUnit(descMarginRightTablet, descMarginType) + " !important",
            "margin-bottom": generateCSSUnit(descMarginBottomTablet, descMarginType) + " !important",
            "margin-left": generateCSSUnit(descMarginLeftTablet, descMarginType) + " !important",
            "padding-top": generateCSSUnit(descPaddingTopTablet, descPaddingType) + " !important",
            "padding-right": generateCSSUnit(descPaddingRightTablet, descPaddingType) + " !important",
            "padding-bottom": generateCSSUnit(descPaddingBottomTablet, descPaddingType) + " !important",
            "padding-left": generateCSSUnit(descPaddingLeftTablet, descPaddingType) + " !important"
        },
        " .premium-icon-box__btn": {
            "font-size": generateCSSUnit(btnSizeTablet, btnSizeUnit),
            "margin-top": generateCSSUnit(btnMarginTopTablet, btnMarginType) + " !important",
            "margin-right": generateCSSUnit(btnMarginRightTablet, btnMarginType) + " !important",
            "margin-bottom": generateCSSUnit(btnMarginBottomTablet, btnMarginType) + " !important",
            "margin-left": generateCSSUnit(btnMarginLeftTablet, btnMarginType) + " !important",
            "padding-top": generateCSSUnit(btnPaddingTopTablet, btnPaddingType) + " !important",
            "padding-right": generateCSSUnit(btnPaddingRightTablet, btnPaddingType) + " !important",
            "padding-bottom": generateCSSUnit(btnPaddingBottomTablet, btnPaddingType) + " !important",
            "padding-left": generateCSSUnit(btnPaddingLeftTablet, btnPaddingType) + " !important"
        },
        " .premium-icon-box__btn_wrap:hover .premium-icon-box__btn": {
            "margin-top": generateCSSUnit(btnMarginTopTabletH, btnMarginTypeH) + " !important",
            "margin-right": generateCSSUnit(btnMarginRightTabletH, btnMarginTypeH) + " !important",
            "margin-bottom": generateCSSUnit(btnMarginBottomTabletH, btnMarginTypeH) + " !important",
            "margin-left": generateCSSUnit(btnMarginLeftTabletH, btnMarginTypeH) + " !important",
            "padding-top": generateCSSUnit(btnPaddingTopTabletH, btnPaddingTypeH) + " !important",
            "padding-right": generateCSSUnit(btnPaddingRightTabletH, btnPaddingTypeH) + " !important",
            "padding-bottom": generateCSSUnit(btnPaddingBottomTabletH, btnPaddingTypeH) + " !important",
            "padding-left": generateCSSUnit(btnPaddingLeftTabletH, btnPaddingTypeH) + " !important"
        },
        " .premium-icon-box-label": {
            "font-size": generateCSSUnit(labelSizeTablet, labelSizeUnit),
            "margin-top": generateCSSUnit(labelMarginTopTablet, labelMarginType),
            "margin-right": generateCSSUnit(labelMarginRightTablet, labelMarginType),
            "margin-bottom": generateCSSUnit(labelMarginBottomTablet, labelMarginType),
            "margin-left": generateCSSUnit(labelMarginLeftTablet, labelMarginType)
        },
        ' .premium-icon-box-big': {
            "right": generateCSSUnit(hOffsetTablet, hOffsetUnit) + " !important",
            "bottom": generateCSSUnit(vOffsetTablet, vOffsetUnit) + " !important",
            "opacity": `${iconBackOpacityTablet}`,
            "transform ": `rotate(${iconRotateTablet}deg)`,
        }
    }

    mobile_selectors = {
        " ": {
            "margin-top": generateCSSUnit(outerMarginTMobile, 'px'),
            "margin-right": generateCSSUnit(outerMarginRMobile, 'px'),
            "margin-bottom": generateCSSUnit(outerMarginBMobile, 'px'),
            "margin-left": generateCSSUnit(outerMarginLMobile, 'px'),
            "padding-top": generateCSSUnit(outerPaddingTMobile, paddingU),
            "padding-right": generateCSSUnit(outerPaddingRMobile, paddingU),
            "padding-bottom": generateCSSUnit(outerPaddingBMobile, paddingU),
            "padding-left": generateCSSUnit(outerPaddingLMobile, paddingU)
        },
        " .premium-icon-box": {
            "margin-top": generateCSSUnit(marginTMobile, 'px'),
            "margin-right": generateCSSUnit(marginRMobile, 'px'),
            "margin-bottom": generateCSSUnit(marginBMobile, 'px'),
            "margin-left": generateCSSUnit(marginLMobile, 'px'),
            "padding-top": generateCSSUnit(paddingTMobile, paddingU),
            "padding-right": generateCSSUnit(paddingRMobile, paddingU),
            "padding-bottom": generateCSSUnit(paddingBMobile, paddingU),
            "padding-left": generateCSSUnit(paddingLMobile, paddingU)
        },
        " .premium-icon-box__icon": {
            "margin-top": generateCSSUnit(iconMarginTopMobile, iconMarginType),
            "margin-right": generateCSSUnit(iconMarginRightMobile, iconMarginType),
            "margin-bottom": generateCSSUnit(iconMarginBottomMobile, iconMarginType),
            "margin-left": generateCSSUnit(iconMarginLeftMobile, iconMarginType),
            "padding-top": generateCSSUnit(iconPaddingTopMobile, iconPaddingType),
            "padding-right": generateCSSUnit(iconPaddingRightMobile, iconPaddingType),
            "padding-bottom": generateCSSUnit(iconPaddingBottomMobile, iconPaddingType),
            "padding-left": generateCSSUnit(iconPaddingLeftMobile, iconPaddingType)
        },
        " .premium-icon-box__title_wrap .premium-icon-box__title ": {
            "font-size": generateCSSUnit(titleSizeMobile, titleSizeUnit),
            "margin-top": generateCSSUnit(titleMarginTopMobile, titleMarginType) + " !important",
            "margin-right": generateCSSUnit(titleMarginRightMobile, titleMarginType) + " !important",
            "margin-bottom": generateCSSUnit(titleMarginBottomMobile, titleMarginType) + " !important",
            "margin-left": generateCSSUnit(titleMarginLeftMobile, titleMarginType) + " !important",
            "padding-top": generateCSSUnit(titlePaddingTopMobile, titlePaddingType) + " !important",
            "padding-right": generateCSSUnit(titlePaddingRightMobile, titlePaddingType) + " !important",
            "padding-bottom": generateCSSUnit(titlePaddingBottomMobile, titlePaddingType) + " !important",
            "padding-left": generateCSSUnit(titlePaddingLeftMobile, titlePaddingType) + " !important"
        },

        " .premium-icon-box__desc": {
            "font-size": generateCSSUnit(descSizeMobile, descSizeUnit),
            "margin-top": generateCSSUnit(descMarginTopMobile, descMarginType) + " !important",
            "margin-right": generateCSSUnit(descMarginRightMobile, descMarginType) + " !important",
            "margin-bottom": generateCSSUnit(descMarginBottomMobile, descMarginType) + " !important",
            "margin-left": generateCSSUnit(descMarginLeftMobile, descMarginType) + " !important",
            "padding-top": generateCSSUnit(descPaddingTopMobile, descPaddingType) + " !important",
            "padding-right": generateCSSUnit(descPaddingRightMobile, descPaddingType) + " !important",
            "padding-bottom": generateCSSUnit(descPaddingBottomMobile, descPaddingType) + " !important",
            "padding-left": generateCSSUnit(descPaddingLeftMobile, descPaddingType) + " !important"
        },
        " .premium-icon-box__btn": {
            "font-size": generateCSSUnit(btnSizeMobile, btnSizeUnit),
            "margin-top": generateCSSUnit(btnMarginTopMobile, btnMarginType) + " !important",
            "margin-right": generateCSSUnit(btnMarginRightMobile, btnMarginType) + " !important",
            "margin-bottom": generateCSSUnit(btnMarginBottomMobile, btnMarginType) + " !important",
            "margin-left": generateCSSUnit(btnMarginLeftMobile, btnMarginType) + " !important",
            "padding-top": generateCSSUnit(btnPaddingTopMobile, btnPaddingType) + " !important",
            "padding-right": generateCSSUnit(btnPaddingRightMobile, btnPaddingType) + " !important",
            "padding-bottom": generateCSSUnit(btnPaddingBottomMobile, btnPaddingType) + " !important",
            "padding-left": generateCSSUnit(btnPaddingLeftMobile, btnPaddingType) + " !important"
        },
        " .premium-icon-box__btn_wrap:hover .premium-icon-box__btn": {
            "margin-top": generateCSSUnit(btnMarginTopMobileH, btnMarginTypeH) + " !important",
            "margin-right": generateCSSUnit(btnMarginRightMobileH, btnMarginTypeH) + " !important",
            "margin-bottom": generateCSSUnit(btnMarginBottomMobileH, btnMarginTypeH) + " !important",
            "margin-left": generateCSSUnit(btnMarginLeftMobileH, btnMarginTypeH) + " !important",
            "padding-top": generateCSSUnit(btnPaddingTopMobileH, btnPaddingTypeH) + " !important",
            "padding-right": generateCSSUnit(btnPaddingRightMobileH, btnPaddingTypeH) + " !important",
            "padding-bottom": generateCSSUnit(btnPaddingBottomMobileH, btnPaddingTypeH) + " !important",
            "padding-left": generateCSSUnit(btnPaddingLeftMobileH, btnPaddingTypeH) + " !important"
        },
        " .premium-icon-box-label": {
            "font-size": generateCSSUnit(labelSizeMobile, labelSizeUnit),
            "margin-top": generateCSSUnit(labelMarginTopMobile, labelMarginType),
            "margin-right": generateCSSUnit(labelMarginRightMobile, labelMarginType),
            "margin-bottom": generateCSSUnit(labelMarginBottomMobile, labelMarginType),
            "margin-left": generateCSSUnit(labelMarginLeftMobile, labelMarginType)
        },
        ' .premium-icon-box-big': {
            "right": generateCSSUnit(hOffsetMobile, hOffsetUnit) + " !important",
            "bottom": generateCSSUnit(vOffsetMobile, vOffsetUnit) + " !important",
            "opacity": `${iconBackOpacityMobile}`,
            "transform ": `rotate(${iconRotateMobile}deg)`,
        }
    }

    let styling_css = ''
    let id = `#premium-icon-box-${block_id}`
    if (classMigrate) {
        id = `.premium-icon-box-${block_id}`
    }


    styling_css = generateCSS(selectors, id)
    styling_css += generateCSS(tablet_selectors, id, true, "tablet")

    styling_css += generateCSS(mobile_selectors, id, true, "mobile")

    return styling_css

}
export default styling